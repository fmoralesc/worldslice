*worldslice*  a statusline config plugin

			      W O R L D S L I C E

- INTRO

  A 4-dimensional world can be described as a sequence of 3-dimensional
  slices, which are the state of the world at an index t.

  This plugin is basically me extracting my statusline configuration into a
  detachable module and working out some behavior kinks.

- USAGE

  You can set *g:worldslice#config* (a list of items) and then run
  *worldslice#init()*, or pass the config explicitely to the funtion, like
  in the following example (it's a modification of my own config).
>
    function! StatusDir()
	if &buftype != "nofile"
	    let d = expand("%:p:~:h")
	    if d != fnamemodify(getcwd(), ":~")
		return expand("%:p:.:h").'/'
	    else
		return ''
	    endif
	else
	    return ''
	endif
    endfunction

    let s:my_worldslice_config = [
		\ '+(@:)', ["%{fnamemodify(getcwd(),':~')}", 'Special'],
		\ '+(:)', ['%n', 'Number'],
		\ '+(:)', ["%{expand('%:h')!=''? StatusDir(): ''}", 'Directory'],
		\ ["%{expand('%:h')!=''? expand('%:t'): '[unnamed]'}", 'Identifier'],
		\ ['%m%r', 'Boolean'],
		\ ' %=\',
		\ ['%{&fenc}', 'Constant'],
		\ '+(:)', ['%{&ft}', 'Type'],
		\ '+(:)', ['%{&fo}', 'Function'],
		\ '+(:)', ["%{&spell?&spl:''}", 'SpellBad'],
		\ [' %l,%c', 'Number']
		\ ]
    call worldslice#init(s:my_worldslice_config)
<

The '+(...)' format is a shortcut for defining delimiters, the text between
the parentheses is displayed.

Note that items without a highlighting group, like '[+(@:)]', don't need to be
enclosed in brackes: '+(@:)' is equivalent.
